

//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------


namespace Biblos.DataLayer
{

using System;
using System.Data.Entity;
using System.Data.Entity.Infrastructure;

using System.Data.Entity.Core.Objects;
using System.Linq;


public partial class BIBLOS : DbContext
{
    public BIBLOS()
        : base("name=BIBLOS")
    {

    }

    protected override void OnModelCreating(DbModelBuilder modelBuilder)
    {
        throw new UnintentionalCodeFirstException();
    }


    public virtual DbSet<AUTOR> AUTOR { get; set; }

    public virtual DbSet<BOOK> BOOK { get; set; }

    public virtual DbSet<SALES> SALES { get; set; }

    public virtual DbSet<USERS> USERS { get; set; }


    public virtual int ADD_SALE(Nullable<int> cLIENT, Nullable<int> bOOK, Nullable<int> qUANTITY, Nullable<System.DateTime> dATE_SALE)
    {

        var cLIENTParameter = cLIENT.HasValue ?
            new ObjectParameter("CLIENT", cLIENT) :
            new ObjectParameter("CLIENT", typeof(int));


        var bOOKParameter = bOOK.HasValue ?
            new ObjectParameter("BOOK", bOOK) :
            new ObjectParameter("BOOK", typeof(int));


        var qUANTITYParameter = qUANTITY.HasValue ?
            new ObjectParameter("QUANTITY", qUANTITY) :
            new ObjectParameter("QUANTITY", typeof(int));


        var dATE_SALEParameter = dATE_SALE.HasValue ?
            new ObjectParameter("DATE_SALE", dATE_SALE) :
            new ObjectParameter("DATE_SALE", typeof(System.DateTime));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ADD_SALE", cLIENTParameter, bOOKParameter, qUANTITYParameter, dATE_SALEParameter);
    }


    public virtual ObjectResult<GET_BOOKS_Result> GET_BOOKS()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_BOOKS_Result>("GET_BOOKS");
    }


    public virtual ObjectResult<GET_LESS_SOLD_BOOK_Result> GET_LESS_SOLD_BOOK(Nullable<System.DateTime> dATE)
    {

        var dATEParameter = dATE.HasValue ?
            new ObjectParameter("DATE", dATE) :
            new ObjectParameter("DATE", typeof(System.DateTime));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_LESS_SOLD_BOOK_Result>("GET_LESS_SOLD_BOOK", dATEParameter);
    }


    public virtual ObjectResult<GET_MOST_SOLD_BOOK_Result> GET_MOST_SOLD_BOOK(Nullable<System.DateTime> dATE)
    {

        var dATEParameter = dATE.HasValue ?
            new ObjectParameter("DATE", dATE) :
            new ObjectParameter("DATE", typeof(System.DateTime));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_MOST_SOLD_BOOK_Result>("GET_MOST_SOLD_BOOK", dATEParameter);
    }


    public virtual ObjectResult<GET_ONE_BOOK_Result> GET_ONE_BOOK(Nullable<int> iD)
    {

        var iDParameter = iD.HasValue ?
            new ObjectParameter("ID", iD) :
            new ObjectParameter("ID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_ONE_BOOK_Result>("GET_ONE_BOOK", iDParameter);
    }


    public virtual ObjectResult<GET_SALES_BY_DAY_Result> GET_SALES_BY_DAY(Nullable<System.DateTime> dATE)
    {

        var dATEParameter = dATE.HasValue ?
            new ObjectParameter("DATE", dATE) :
            new ObjectParameter("DATE", typeof(System.DateTime));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_SALES_BY_DAY_Result>("GET_SALES_BY_DAY", dATEParameter);
    }


    public virtual int SELL_BOOK(Nullable<int> qUANTITY_BOOKS, Nullable<int> iD)
    {

        var qUANTITY_BOOKSParameter = qUANTITY_BOOKS.HasValue ?
            new ObjectParameter("QUANTITY_BOOKS", qUANTITY_BOOKS) :
            new ObjectParameter("QUANTITY_BOOKS", typeof(int));


        var iDParameter = iD.HasValue ?
            new ObjectParameter("ID", iD) :
            new ObjectParameter("ID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SELL_BOOK", qUANTITY_BOOKSParameter, iDParameter);
    }

}

}

