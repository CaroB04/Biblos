CREATE DATABASE BIBLOS
USE BIBLOS
GO

/*TABLES*/

CREATE TABLE AUTOR
(
	ID INT PRIMARY KEY IDENTITY,
	_NAME VARCHAR(50)
)
GO

CREATE TABLE USERS
(
	ID INT PRIMARY KEY IDENTITY,
	_NAME VARCHAR (50) NOT NULL,
	EMAIL VARCHAR (50) UNIQUE NOT NULL,
	_PASSWORD VARCHAR (15) NOT NULL,
	_ROLE VARCHAR (10) NOT NULL 
)
GO

CREATE TABLE BOOK
(
	ID INT PRIMARY KEY IDENTITY,
	ISBN VARCHAR (13) UNIQUE NOT NULL,
	TITLE VARCHAR (100) NOT NULL,
	DATE_PUBLICATION VARCHAR (4),
	EDITORIAL VARCHAR (100) NOT NULL,
	AUTOR INT FOREIGN KEY REFERENCES AUTOR(ID) NOT NULL,
	STOCK INT DEFAULT(0)
)
GO

CREATE TABLE SALES
(
	ID INT PRIMARY KEY IDENTITY,
	CLIENT INT FOREIGN KEY REFERENCES USERS(ID) NOT NULL,
	BOOK INT FOREIGN KEY REFERENCES BOOK(ID) NOT NULL,
	QUANTITY INT DEFAULT(1),
	DATE_SALE DATE NOT NULL
)
GO

/*PROCEDURES*/

CREATE PROCEDURE ADD_SALE
	@CLIENT INT,
	@BOOK INT,
	@QUANTITY INT,
	@DATE_SALE DATE
AS

INSERT INTO SALES VALUES (@CLIENT, @BOOK, @QUANTITY, @DATE_SALE)	
GO

CREATE PROCEDURE GET_BOOKS
AS
SELECT B.ID,
	B.ISBN,
	B.TITLE,
	B.EDITORIAL,
	B.DATE_PUBLICATION,
	A._NAME AS AUTOR,
	B.STOCK
	FROM BOOK B
	INNER JOIN AUTOR A ON B.AUTOR = A.ID
	WHERE B.STOCK > 0
GO

CREATE PROCEDURE GET_ONE_BOOK
	@ID INT
AS
SELECT B.ID,
	B.ISBN,
	B.TITLE,
	B.EDITORIAL,
	B.DATE_PUBLICATION,
	A._NAME AS AUTOR,
	B.STOCK
	FROM BOOK B
	INNER JOIN AUTOR A ON B.AUTOR = A.ID
	WHERE B.ID = @ID
GO

CREATE PROCEDURE SELL_BOOK
	@QUANTITY_BOOKS INT,
	@ID INT
AS
DECLARE
	@NEW_QUANTITY INT,
	@ACTUAL_QUANTITY INT
SET
	@ACTUAL_QUANTITY = (SELECT STOCK FROM BOOK WHERE ID = @ID)
SET	
	@NEW_QUANTITY = @ACTUAL_QUANTITY - @QUANTITY_BOOKS

UPDATE BOOK
	SET STOCK = @NEW_QUANTITY
	WHERE ID = @ID
GO

CREATE PROCEDURE GET_SALES_BY_DAY
	@DATE DATE
AS
	SELECT S.ID,
	U._NAME AS CLIENT,
	B.TITLE,
	S.QUANTITY,
	S.DATE_SALE
	FROM SALES S
	INNER JOIN USERS U ON S.CLIENT = U.ID
	INNER JOIN BOOK B ON S.BOOK = B.ID
	WHERE S.DATE_SALE = @DATE
GO

CREATE PROCEDURE GET_MOST_SOLD_BOOK
	@DATE DATE
AS
	SELECT TOP 1 
	 B.ID,
	B.ISBN,
	B.TITLE,
	B.EDITORIAL,
	B.DATE_PUBLICATION,
	A._NAME AS AUTOR,
	B.STOCK,
	COUNT(S.BOOK) AS TOTAL_VENTAS
	FROM BOOK B
	INNER JOIN AUTOR A ON B.AUTOR = A.ID
	INNER JOIN SALES S ON S.BOOK = B.ID
	WHERE S.DATE_SALE = @DATE
	GROUP BY B.TITLE,A._NAME,B.EDITORIAL,B.DATE_PUBLICATION,B.ID, B.STOCK, B.ISBN
	ORDER BY TOTAL_VENTAS DESC
GO

CREATE PROCEDURE GET_LESS_SOLD_BOOK
	@DATE DATE
AS
	SELECT TOP 1 
	 B.ID,
	B.ISBN,
	B.TITLE,
	B.EDITORIAL,
	B.DATE_PUBLICATION,
	A._NAME AS AUTOR,
	B.STOCK,
	COUNT(S.BOOK) AS TOTAL_VENTAS
	FROM BOOK B
	INNER JOIN AUTOR A ON B.AUTOR = A.ID
	INNER JOIN SALES S ON S.BOOK = B.ID
	WHERE S.DATE_SALE = @DATE
	GROUP BY B.TITLE,A._NAME,B.EDITORIAL,B.DATE_PUBLICATION,B.ID, B.STOCK, B.ISBN
	ORDER BY TOTAL_VENTAS ASC
GO


